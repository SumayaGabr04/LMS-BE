# This file is a template, and might need editing before it works on your project.
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Gradle.gitlab-ci.yml

# This is the Gradle build system for JVM applications
# https://gradle.org/
# https://github.com/gradle/gradle

image: gradle:8.3.0-jdk17

before_script:
  - GRADLE_USER_HOME="$(pwd)/.gradle"
  - export GRADLE_USER_HOME

stages:
  - build
  - test
  - deploy
  - sonar

build:
  stage: build
  script: gradle --build-cache assemble
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle

test:
  stage: test
  script: ./gradlew check
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle

scan:
  stage: test
  script:
    - gradle sonar -Pcoverage -Dsonar.host.url="http://host.docker.internal:9000" -Dsonar.token=$SONARQUBE_TOKEN --info
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle

  dependencies:
    - test

deploy:
  stage: deploy
  script:
    - docker run --net $NETWORK_NAME --name $DB_CONTAINER_NAME -e MYSQL_DATABASE=$MYSQL_DATABASE -e MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD -p 3390:3306 -d mysql
    - docker build -t lms .
    - docker run -d -p 8090:8080 --net=$NETWORK_NAME --env spring_profiles_active=$SPRING_PROFILES_ACTIVE --name=$APP_CONTAINER_NAME lms
  environment:
    name: staging
    url: http://localhost:8090


sonar:
  stage: sonar
  script:
    - gradle sonar -Pcoverage -Dsonar.host.url="http://host.docker.internal:9000" -Dsonar.token=$SONARQUBE_TOKEN --info


